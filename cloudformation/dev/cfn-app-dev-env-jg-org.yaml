---
AWSTemplateFormatVersion: 2010-09-09

Description: This is a parent template for an application environment to implement all the AWS resources required i.e. ECS Cluster and associated Load Balancer.

Parameters:
  TemplateBucket:
    Type: String
    Description: The S3 bucket from which to fetch the templates used by this stack.

  ClusterName:
    Type: String  

  LbName:  
    Type: String

  DBName:
    Type: String

  EnvironmentInstance:
    Type: String

Resources:
  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/services/ECS/ecs-cluster.yaml"
      Tags:
        - Key: owner
          Value: nps
        - Key: EnvironmentInstance
          Value: !Ref EnvironmentInstance
        - Key: capability
          Value: container
        - Key: components
          Value: ecs
        - Key: source-code
          Value: na
        - Key: application
          Value: any
        - Key: service
          Value: compute
        - Key: is-production
          Value: no
        - Key: runbook-description-confluence-url
          Value: no
        - Key: infrastructure-support
          Value: devops
      Parameters:
        ClusterName: !Ref ClusterName
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: { "Fn::ImportValue" : "pathways-dev-net-1-ecs-subnets" }
        VpcId: { "Fn::ImportValue" : "pathways-dev-net-1-vpc-id" }

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/services/ALB/load-balancer.yaml"
      Tags:
        - Key: owner
          Value: nps
        - Key: EnvironmentInstance
          Value: !Ref EnvironmentInstance
        - Key: capability
          Value: network
        - Key: components
          Value: alb
        - Key: source-code
          Value: na
        - Key: application
          Value: any
        - Key: service
          Value: compute
        - Key: is-production
          Value: no
        - Key: runbook-description-confluence-url
          Value: no
        - Key: infrastructure-support
          Value: devops
      Parameters:
        Subnets: { "Fn::ImportValue" : "pathways-dev-net-1-ecs-subnets" }
        VpcId: { "Fn::ImportValue" : "pathways-dev-net-1-vpc-id" }

  RDSInstance:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/services/postgres/rds.yaml"
      Tags:
        - Key: owner
          Value: nps
        - Key: EnvironmentInstance
          Value: !Ref EnvironmentInstance
        - Key: capability
          Value: database
        - Key: components
          Value: rds
        - Key: source-code
          Value: na
        - Key: application
          Value: any
        - Key: service
          Value: compute
        - Key: is-production
          Value: no
        - Key: runbook-description-confluence-url
          Value: no
        - Key: infrastructure-support
          Value: devops
      Parameters:
        DBName: !Ref DBName
        VPCPrivateSubnets: { "Fn::ImportValue" : "pathways-dev-net-1-rds-subnets" }
        VPCSecurityGroups: { "Fn::ImportValue" : "pathways-dev-net-1-sec-grp" }
        EnvironmentInstance: !Ref EnvironmentInstance

  RDSLambdaDeploy:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/services/postgres/rds-lambda-deploy.yaml"
      Tags:
        - Key: owner
          Value: nps
        - Key: EnvironmentInstance
          Value: !Ref EnvironmentInstance
        - Key: capability
          Value: rds-lambda
        - Key: components
          Value: database
        - Key: source-code
          Value: na
        - Key: application
          Value: any
        - Key: service
          Value: compute
        - Key: is-production
          Value: no
        - Key: runbook-description-confluence-url
          Value: no
        - Key: infrastructure-support
          Value: devops
      Parameters:
        VPCLambdaSubnets: { "Fn::ImportValue" : "pathways-dev-net-1-lambda-subnets" }
        VPCSecurityGroups: { "Fn::ImportValue" : "pathways-dev-net-1-sec-grp" }
        EnvironmentInstance: !Ref EnvironmentInstance
        TemplateBucket: !Ref TemplateBucket


  MongoDB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/services/mongo/mongo.yaml"
      Tags:
        - Key: owner
          Value: nps
        - Key: EnvironmentInstance
          Value: !Ref EnvironmentInstance
        - Key: capability
          Value: nosql-database
        - Key: components
          Value: ec2
        - Key: source-code
          Value: na
        - Key: application
          Value: any
        - Key: service
          Value: compute
        - Key: is-production
          Value: no
        - Key: runbook-description-confluence-url
          Value: no
        - Key: infrastructure-support
          Value: devops
      Parameters:
        EnvironmentInstance: !Ref EnvironmentInstance
        TemplateBucket: !Ref TemplateBucket
        SubnetId: !Select [0, !Split [",", !ImportValue pathways-dev-net-1-mongo-subnets]]
        VpcId: { "Fn::ImportValue": "pathways-dev-net-vpc-1-id" }

  MongoLambdaDeploy:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/templates/services/mongo/mongodb-lambda-deploy.yaml"
      Tags:
        - Key: owner
          Value: nps
        - Key: EnvironmentInstance
          Value: !Ref EnvironmentInstance
        - Key: capability
          Value: rds-lambda
        - Key: components
          Value: database
        - Key: source-code
          Value: na
        - Key: application
          Value: any
        - Key: service
          Value: compute
        - Key: is-production
          Value: no
        - Key: runbook-description-confluence-url
          Value: no
        - Key: infrastructure-support
          Value: devops
      Parameters:
        VPCLambdaSubnets: { "Fn::ImportValue" : "pathways-dev-net-lambda-1-subnets" }
        VPCSecurityGroups: { "Fn::ImportValue" : "pathways-dev-net-sec-1-grp" }
        EnvironmentInstance: !Ref EnvironmentInstance
        TemplateBucket: !Ref TemplateBucket


